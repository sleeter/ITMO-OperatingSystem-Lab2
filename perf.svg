<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>from_kuid (19,015,180 samples, 0.23%)</title><rect x="140.4" y="245" width="2.7" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="143.43" y="255.5" ></text>
</g>
<g >
<title>mem_cgroup_commit_charge (7,071,793 samples, 0.09%)</title><rect x="10.2" y="405" width="1.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.23" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::push_back (110,075,560 samples, 1.33%)</title><rect x="1009.3" y="517" width="15.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1012.28" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::operator (12,301,090 samples, 0.15%)</title><rect x="971.9" y="501" width="1.8" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="974.90" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7,071,793 samples, 0.09%)</title><rect x="10.2" y="341" width="1.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.23" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;::pair&lt;std::pair&lt;int, long&gt; const&amp;&gt; (27,713,249 samples, 0.34%)</title><rect x="1141.2" y="437" width="3.9" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1144.19" y="447.5" ></text>
</g>
<g >
<title>submit_bio (180,308,778 samples, 2.18%)</title><rect x="414.4" y="325" width="25.7" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="417.42" y="335.5" >s..</text>
</g>
<g >
<title>virtio_check_driver_offered_feature (15,770,138 samples, 0.19%)</title><rect x="212.7" y="197" width="2.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="215.74" y="207.5" ></text>
</g>
<g >
<title>iov_iter_advance (15,542,977 samples, 0.19%)</title><rect x="371.3" y="309" width="2.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="374.35" y="319.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (18,239,730 samples, 0.22%)</title><rect x="72.3" y="341" width="2.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="75.33" y="351.5" ></text>
</g>
<g >
<title>std::_List_node&lt;std::pair&lt;int, long&gt; &gt;::_M_valptr (14,638,616 samples, 0.18%)</title><rect x="1020.8" y="485" width="2.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1023.77" y="495.5" ></text>
</g>
<g >
<title>__ext4_ext_dirty (40,134,631 samples, 0.49%)</title><rect x="481.0" y="277" width="5.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="484.04" y="287.5" ></text>
</g>
<g >
<title>__find_get_block (25,753,565 samples, 0.31%)</title><rect x="581.5" y="197" width="3.7" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="584.52" y="207.5" ></text>
</g>
<g >
<title>ext4_ext_next_allocated_block (17,913,570 samples, 0.22%)</title><rect x="486.8" y="293" width="2.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="489.77" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (33,562,850 samples, 0.41%)</title><rect x="83.4" y="405" width="4.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="86.42" y="415.5" ></text>
</g>
<g >
<title>operator new (52,413,756 samples, 0.63%)</title><rect x="1127.3" y="453" width="7.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1130.27" y="463.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (136,086,437 samples, 1.65%)</title><rect x="523.5" y="277" width="19.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="526.46" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (1,586,150 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__update_load_avg_se (16,693,531 samples, 0.20%)</title><rect x="776.6" y="261" width="2.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="779.62" y="271.5" ></text>
</g>
<g >
<title>blk_cgroup_bio_start (12,241,857 samples, 0.15%)</title><rect x="434.5" y="277" width="1.7" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="437.48" y="287.5" ></text>
</g>
<g >
<title> (16,532,569 samples, 0.20%)</title><rect x="1004.4" y="501" width="2.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1007.35" y="511.5" ></text>
</g>
<g >
<title>ext4_free_group_clusters (14,733,687 samples, 0.18%)</title><rect x="557.7" y="261" width="2.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="560.74" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap (16,060,680 samples, 0.19%)</title><rect x="766.0" y="309" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="768.98" y="319.5" ></text>
</g>
<g >
<title>std::operator== (23,835,571 samples, 0.29%)</title><rect x="991.6" y="485" width="3.4" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="994.58" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (1,586,150 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_erase_aux (131,121,013 samples, 1.59%)</title><rect x="883.6" y="453" width="18.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="886.63" y="463.5" ></text>
</g>
<g >
<title>memset_orig (15,883,684 samples, 0.19%)</title><rect x="505.7" y="277" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="508.66" y="287.5" ></text>
</g>
<g >
<title>__libc_pwrite (4,542,305,849 samples, 54.92%)</title><rect x="104.8" y="517" width="648.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="107.81" y="527.5" >__libc_pwrite</text>
</g>
<g >
<title>ext4_cache_extents (14,735,767 samples, 0.18%)</title><rect x="503.6" y="277" width="2.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="506.56" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt; &gt; (12,701,588 samples, 0.15%)</title><rect x="1139.4" y="453" width="1.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1142.37" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (32,518,990 samples, 0.39%)</title><rect x="1056.0" y="453" width="4.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1059.04" y="463.5" ></text>
</g>
<g >
<title>ext4_mb_release_context (40,815,296 samples, 0.49%)</title><rect x="617.2" y="293" width="5.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="620.18" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (91,094,861 samples, 1.10%)</title><rect x="845.9" y="501" width="13.0" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="848.90" y="511.5" ></text>
</g>
<g >
<title>std::map&lt;int, FileDescriptor, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::end (11,019,241 samples, 0.13%)</title><rect x="973.7" y="501" width="1.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="976.65" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (29,315,203 samples, 0.35%)</title><rect x="525.6" y="229" width="4.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.55" y="239.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, long&gt; &gt;::operator (51,080,560 samples, 0.62%)</title><rect x="1108.0" y="485" width="7.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1111.05" y="495.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (20,846,167 samples, 0.25%)</title><rect x="688.1" y="277" width="3.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="691.10" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (15,416,061 samples, 0.19%)</title><rect x="325.7" y="213" width="2.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="328.75" y="223.5" ></text>
</g>
<g >
<title>std::tuple&lt;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;&gt; &gt; (34,765,495 samples, 0.42%)</title><rect x="1158.5" y="501" width="5.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1161.52" y="511.5" ></text>
</g>
<g >
<title>mutex_unlock (17,071,485 samples, 0.21%)</title><rect x="745.2" y="325" width="2.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="748.15" y="335.5" ></text>
</g>
<g >
<title>sched_clock (15,524,829 samples, 0.19%)</title><rect x="350.9" y="261" width="2.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="353.85" y="271.5" ></text>
</g>
<g >
<title>stop_this_handle (15,798,132 samples, 0.19%)</title><rect x="133.6" y="357" width="2.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="136.59" y="367.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (19,052,051 samples, 0.23%)</title><rect x="59.1" y="453" width="2.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="62.12" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,693,531 samples, 0.20%)</title><rect x="776.6" y="389" width="2.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="779.62" y="399.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,586,150 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>update_blocked_averages (102,473,618 samples, 1.24%)</title><rect x="306.9" y="245" width="14.6" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="309.91" y="255.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (18,173,011 samples, 0.22%)</title><rect x="108.5" y="469" width="2.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="111.47" y="479.5" ></text>
</g>
<g >
<title>asm_common_interrupt (7,071,793 samples, 0.09%)</title><rect x="10.2" y="389" width="1.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.23" y="399.5" ></text>
</g>
<g >
<title>allocate_aligned_buffer (202,899,125 samples, 2.45%)</title><rect x="752.8" y="517" width="29.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="755.84" y="527.5" >al..</text>
</g>
<g >
<title>std::operator!= (12,080,280 samples, 0.15%)</title><rect x="955.3" y="501" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="958.34" y="511.5" ></text>
</g>
<g >
<title>__es_delayed_clu (15,056,926 samples, 0.18%)</title><rect x="468.9" y="293" width="2.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="471.94" y="303.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (34,449,454 samples, 0.42%)</title><rect x="732.4" y="277" width="4.9" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="735.42" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::_M_ptr (12,301,090 samples, 0.15%)</title><rect x="971.9" y="453" width="1.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="974.90" y="463.5" ></text>
</g>
<g >
<title>unsigned long const&amp; std::min&lt;unsigned long&gt; (18,118,737 samples, 0.22%)</title><rect x="1187.4" y="533" width="2.6" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1190.42" y="543.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (35,382,227 samples, 0.43%)</title><rect x="863.8" y="437" width="5.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="866.85" y="447.5" ></text>
</g>
<g >
<title>aa_file_perm (11,914,661 samples, 0.14%)</title><rect x="86.5" y="389" width="1.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="89.51" y="399.5" ></text>
</g>
<g >
<title>lookup_bh_lru (12,858,404 samples, 0.16%)</title><rect x="583.4" y="181" width="1.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="586.36" y="191.5" ></text>
</g>
<g >
<title>ext4_dio_alignment (13,567,527 samples, 0.16%)</title><rect x="61.8" y="437" width="2.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="64.84" y="447.5" ></text>
</g>
<g >
<title>perf_ctx_enable (31,570,426 samples, 0.38%)</title><rect x="287.6" y="261" width="4.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="290.55" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (16,693,531 samples, 0.20%)</title><rect x="776.6" y="357" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="779.62" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,036,437 samples, 0.21%)</title><rect x="768.3" y="373" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="771.27" y="383.5" ></text>
</g>
<g >
<title>lookup_bh_lru (13,838,614 samples, 0.17%)</title><rect x="501.6" y="229" width="2.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="504.58" y="239.5" ></text>
</g>
<g >
<title>gup_pte_range (46,969,770 samples, 0.57%)</title><rect x="387.1" y="229" width="6.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="390.13" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,657,943 samples, 0.10%)</title><rect x="10.0" y="549" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (12,048,255 samples, 0.15%)</title><rect x="143.1" y="261" width="1.8" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="146.14" y="271.5" ></text>
</g>
<g >
<title>bio_integrity_prep (15,899,918 samples, 0.19%)</title><rect x="430.9" y="245" width="2.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="433.87" y="255.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (12,031,140 samples, 0.15%)</title><rect x="436.2" y="277" width="1.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="439.22" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,910,843 samples, 0.18%)</title><rect x="585.2" y="197" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="588.19" y="207.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::find (8,647,188 samples, 0.10%)</title><rect x="970.7" y="501" width="1.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="973.66" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_erase_aux (193,038,745 samples, 2.33%)</title><rect x="883.6" y="469" width="27.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="886.63" y="479.5" >s..</text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (62,297,733 samples, 0.75%)</title><rect x="730.2" y="293" width="8.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="733.24" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (15,524,829 samples, 0.19%)</title><rect x="350.9" y="277" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="353.85" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (41,522,124 samples, 0.50%)</title><rect x="770.7" y="389" width="5.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="773.70" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::_M_valptr (12,301,090 samples, 0.15%)</title><rect x="971.9" y="469" width="1.8" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="974.90" y="479.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (19,015,180 samples, 0.23%)</title><rect x="140.4" y="261" width="2.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="143.43" y="271.5" ></text>
</g>
<g >
<title>bdev_getblk (21,414,735 samples, 0.26%)</title><rect x="483.7" y="197" width="3.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="486.71" y="207.5" ></text>
</g>
<g >
<title>__es_insert_extent (29,685,336 samples, 0.36%)</title><rect x="453.8" y="309" width="4.3" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="456.83" y="319.5" ></text>
</g>
<g >
<title>brk (16,060,680 samples, 0.19%)</title><rect x="766.0" y="421" width="2.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="768.98" y="431.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (16,865,325 samples, 0.20%)</title><rect x="243.3" y="37" width="2.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="246.26" y="47.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::erase (426,701,290 samples, 5.16%)</title><rect x="875.3" y="485" width="60.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="878.26" y="495.5" >std::_..</text>
</g>
<g >
<title>__radix_tree_lookup (17,037,280 samples, 0.21%)</title><rect x="403.4" y="261" width="2.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="406.43" y="271.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (23,004,088 samples, 0.28%)</title><rect x="166.0" y="325" width="3.3" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="169.02" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (22,478,691 samples, 0.27%)</title><rect x="292.1" y="213" width="3.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="295.06" y="223.5" ></text>
</g>
<g >
<title>__default_morecore (16,060,680 samples, 0.19%)</title><rect x="766.0" y="437" width="2.3" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="768.98" y="447.5" ></text>
</g>
<g >
<title>blk_mq_submit_bio (116,883,931 samples, 1.41%)</title><rect x="417.8" y="261" width="16.7" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="420.80" y="271.5" ></text>
</g>
<g >
<title>common_interrupt (7,071,793 samples, 0.09%)</title><rect x="10.2" y="373" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.23" y="383.5" ></text>
</g>
<g >
<title>__iomap_dio_rw (16,351,061 samples, 0.20%)</title><rect x="135.8" y="389" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="138.84" y="399.5" ></text>
</g>
<g >
<title>__handle_mm_fault (18,421,199 samples, 0.22%)</title><rect x="770.7" y="373" width="2.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="773.70" y="383.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (18,239,730 samples, 0.22%)</title><rect x="72.3" y="389" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="75.33" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_pwrite64 (4,413,694,103 samples, 53.36%)</title><rect x="123.2" y="453" width="629.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="126.16" y="463.5" >__x64_sys_pwrite64</text>
</g>
<g >
<title>__check_block_validity.constprop.0 (15,571,803 samples, 0.19%)</title><rect x="444.1" y="325" width="2.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="447.15" y="335.5" ></text>
</g>
<g >
<title>perf_iterate_sb.constprop.0 (16,060,680 samples, 0.19%)</title><rect x="766.0" y="293" width="2.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="768.98" y="303.5" ></text>
</g>
<g >
<title>blk_mq_plug_issue_direct (517,803,367 samples, 6.26%)</title><rect x="183.6" y="293" width="73.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="186.57" y="303.5" >blk_mq_p..</text>
</g>
<g >
<title>ext4_read_block_bitmap_nowait (58,338,481 samples, 0.71%)</title><rect x="581.5" y="229" width="8.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="584.52" y="239.5" ></text>
</g>
<g >
<title>touch_atime (19,726,868 samples, 0.24%)</title><rect x="88.2" y="437" width="2.8" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="91.21" y="447.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,072,012 samples, 0.11%)</title><rect x="10.0" y="597" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>folio_mark_accessed (17,773,366 samples, 0.21%)</title><rect x="540.3" y="165" width="2.6" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="543.34" y="175.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (12,048,255 samples, 0.15%)</title><rect x="143.1" y="277" width="1.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="146.14" y="287.5" ></text>
</g>
<g >
<title>wbt_wait (12,853,720 samples, 0.16%)</title><rect x="426.5" y="229" width="1.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="429.51" y="239.5" ></text>
</g>
<g >
<title>ext4_map_blocks (1,245,131,899 samples, 15.05%)</title><rect x="453.8" y="325" width="177.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="456.83" y="335.5" >ext4_map_blocks</text>
</g>
<g >
<title>mem_cgroup_handle_over_high (15,520,049 samples, 0.19%)</title><rect x="120.9" y="453" width="2.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="123.95" y="463.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (14,334,604 samples, 0.17%)</title><rect x="160.9" y="357" width="2.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="163.93" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (22,478,691 samples, 0.27%)</title><rect x="292.1" y="149" width="3.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="295.06" y="159.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (63,375,489 samples, 0.77%)</title><rect x="546.9" y="261" width="9.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="549.88" y="271.5" ></text>
</g>
<g >
<title>sched_clock_tick (17,036,437 samples, 0.21%)</title><rect x="768.3" y="261" width="2.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="771.27" y="271.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (239,917,378 samples, 2.90%)</title><rect x="694.0" y="309" width="34.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="696.95" y="319.5" >ex..</text>
</g>
<g >
<title>cgroup_rstat_updated (15,433,731 samples, 0.19%)</title><rect x="437.9" y="277" width="2.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="440.94" y="287.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (14,826,229 samples, 0.18%)</title><rect x="314.1" y="213" width="2.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="317.07" y="223.5" ></text>
</g>
<g >
<title>iomap_dio_bio_iter (572,833,537 samples, 6.93%)</title><rect x="358.4" y="357" width="81.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="361.42" y="367.5" >iomap_dio..</text>
</g>
<g >
<title>iomap_dio_alloc_bio.isra.0 (24,915,273 samples, 0.30%)</title><rect x="354.9" y="357" width="3.5" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="357.87" y="367.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (15,244,739 samples, 0.18%)</title><rect x="169.3" y="373" width="2.2" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="172.30" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (23,100,925 samples, 0.28%)</title><rect x="773.3" y="357" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="776.32" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,865,325 samples, 0.20%)</title><rect x="243.3" y="181" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="246.26" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_insert_node (16,105,367 samples, 0.19%)</title><rect x="1147.9" y="485" width="2.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1150.87" y="495.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (136,086,437 samples, 1.65%)</title><rect x="523.5" y="261" width="19.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="526.46" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_get_node (13,046,917 samples, 0.16%)</title><rect x="1134.8" y="453" width="1.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1137.75" y="463.5" ></text>
</g>
<g >
<title>generic_update_time (55,017,501 samples, 0.67%)</title><rect x="146.8" y="373" width="7.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="149.79" y="383.5" ></text>
</g>
<g >
<title>__virtscsi_add_cmd (33,046,472 samples, 0.40%)</title><rect x="215.0" y="181" width="4.7" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="217.99" y="191.5" ></text>
</g>
<g >
<title>__fdget (12,423,069 samples, 0.15%)</title><rect x="52.7" y="469" width="1.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="55.70" y="479.5" ></text>
</g>
<g >
<title>pick_next_task_fair (178,100,332 samples, 2.15%)</title><rect x="300.3" y="277" width="25.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="303.34" y="287.5" >p..</text>
</g>
<g >
<title>vfs_read (204,536,100 samples, 2.47%)</title><rect x="61.8" y="453" width="29.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="64.84" y="463.5" >vf..</text>
</g>
<g >
<title>ext4_iomap_begin (1,341,565,547 samples, 16.22%)</title><rect x="442.0" y="341" width="191.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="445.01" y="351.5" >ext4_iomap_begin</text>
</g>
<g >
<title>scheduler_tick (16,865,325 samples, 0.20%)</title><rect x="243.3" y="53" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="246.26" y="63.5" ></text>
</g>
<g >
<title>sg_next (18,221,504 samples, 0.22%)</title><rect x="215.0" y="165" width="2.6" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="217.99" y="175.5" ></text>
</g>
<g >
<title>cfree (21,326,282 samples, 0.26%)</title><rect x="897.5" y="389" width="3.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="900.54" y="399.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (181,165,146 samples, 2.19%)</title><rect x="702.3" y="293" width="25.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="705.34" y="303.5" >e..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_lower_bound (21,810,864 samples, 0.26%)</title><rect x="1025.0" y="501" width="3.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1027.98" y="511.5" ></text>
</g>
<g >
<title>radix_tree_lookup (17,037,280 samples, 0.21%)</title><rect x="403.4" y="277" width="2.5" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="406.43" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_ptr (18,081,431 samples, 0.22%)</title><rect x="1058.1" y="437" width="2.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1061.10" y="447.5" ></text>
</g>
<g >
<title>bio_to_wbt_flags (12,853,720 samples, 0.16%)</title><rect x="426.5" y="213" width="1.8" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="429.51" y="223.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (122,584,030 samples, 1.48%)</title><rect x="63.8" y="437" width="17.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="66.78" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_lock (14,542,998 samples, 0.18%)</title><rect x="396.0" y="309" width="2.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="398.98" y="319.5" ></text>
</g>
<g >
<title>handle_pte_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="453" width="1.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.23" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_begin (14,219,326 samples, 0.17%)</title><rect x="880.0" y="469" width="2.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="883.01" y="479.5" ></text>
</g>
<g >
<title>ext4_mb_use_preallocated.constprop.0 (76,916,938 samples, 0.93%)</title><rect x="599.1" y="277" width="11.0" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="602.10" y="287.5" ></text>
</g>
<g >
<title>rb_next (12,124,542 samples, 0.15%)</title><rect x="475.6" y="277" width="1.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="478.62" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,693,531 samples, 0.20%)</title><rect x="776.6" y="437" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="779.62" y="447.5" ></text>
</g>
<g >
<title>update_curr (84,769,975 samples, 1.02%)</title><rect x="263.9" y="245" width="12.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="266.90" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,693,531 samples, 0.20%)</title><rect x="776.6" y="421" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="779.62" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_M_lower_bound (59,732,183 samples, 0.72%)</title><rect x="977.4" y="469" width="8.5" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="980.36" y="479.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (50,410,308 samples, 0.61%)</title><rect x="113.8" y="453" width="7.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="116.75" y="463.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (48,880,094 samples, 0.59%)</title><rect x="529.7" y="229" width="7.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="532.74" y="239.5" ></text>
</g>
<g >
<title>jbd2__journal_start (17,419,892 samples, 0.21%)</title><rect x="669.0" y="309" width="2.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="672.02" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,516,684,244 samples, 54.61%)</title><rect x="108.5" y="485" width="644.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="111.47" y="495.5" >do_syscall_64</text>
</g>
<g >
<title>rw_verify_area (10,141,110 samples, 0.12%)</title><rect x="751.4" y="421" width="1.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="754.39" y="431.5" ></text>
</g>
<g >
<title>from_kuid (20,187,646 samples, 0.24%)</title><rect x="691.1" y="277" width="2.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="694.07" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::find (114,676,072 samples, 1.39%)</title><rect x="975.2" y="485" width="16.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="978.22" y="495.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::operator (24,341,340 samples, 0.29%)</title><rect x="988.1" y="453" width="3.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="991.11" y="463.5" ></text>
</g>
<g >
<title>scsi_queue_rq (501,618,574 samples, 6.06%)</title><rect x="185.9" y="245" width="71.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="188.88" y="255.5" >scsi_que..</text>
</g>
<g >
<title>stop_this_handle (18,239,730 samples, 0.22%)</title><rect x="72.3" y="325" width="2.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="75.33" y="335.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (19,015,180 samples, 0.23%)</title><rect x="140.4" y="277" width="2.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="143.43" y="287.5" ></text>
</g>
<g >
<title>__fdget (32,579,664 samples, 0.39%)</title><rect x="54.5" y="453" width="4.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="57.48" y="463.5" ></text>
</g>
<g >
<title>posix_memalign (202,899,125 samples, 2.45%)</title><rect x="752.8" y="501" width="29.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="755.84" y="511.5" >po..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,693,531 samples, 0.20%)</title><rect x="776.6" y="405" width="2.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="779.62" y="415.5" ></text>
</g>
<g >
<title>cpuacct_charge (38,250,397 samples, 0.46%)</title><rect x="266.9" y="229" width="5.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="269.89" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_S_key (39,970,341 samples, 0.48%)</title><rect x="985.9" y="469" width="5.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="988.88" y="479.5" ></text>
</g>
<g >
<title>io_schedule (682,903,758 samples, 8.26%)</title><rect x="257.4" y="341" width="97.5" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="260.44" y="351.5" >io_schedule</text>
</g>
<g >
<title>void std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_construct_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (27,713,249 samples, 0.34%)</title><rect x="1141.2" y="453" width="3.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1144.19" y="463.5" ></text>
</g>
<g >
<title>ext4_mb_use_inode_pa (16,501,436 samples, 0.20%)</title><rect x="607.7" y="261" width="2.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="610.72" y="271.5" ></text>
</g>
<g >
<title>inode_update_timestamps (12,961,422 samples, 0.16%)</title><rect x="77.3" y="405" width="1.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="80.25" y="415.5" ></text>
</g>
<g >
<title>ext4_ext_map_blocks (1,079,940,607 samples, 13.06%)</title><rect x="468.9" y="309" width="154.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="471.94" y="319.5" >ext4_ext_map_blocks</text>
</g>
<g >
<title>ext4_file_write_iter (4,384,636,152 samples, 53.01%)</title><rect x="125.9" y="421" width="625.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="128.86" y="431.5" >ext4_file_write_iter</text>
</g>
<g >
<title>__read_extent_tree_block (13,838,614 samples, 0.17%)</title><rect x="501.6" y="277" width="2.0" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="504.58" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_brk (16,060,680 samples, 0.19%)</title><rect x="766.0" y="357" width="2.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="768.98" y="367.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (138,098,401 samples, 1.67%)</title><rect x="704.6" y="277" width="19.7" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="707.64" y="287.5" ></text>
</g>
<g >
<title>clock_gettime (25,017,956 samples, 0.30%)</title><rect x="93.6" y="533" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="96.61" y="543.5" ></text>
</g>
<g >
<title>bdev_getblk (41,646,850 samples, 0.50%)</title><rect x="711.7" y="261" width="5.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="714.68" y="271.5" ></text>
</g>
<g >
<title>bool std::operator&lt; &lt;int, long&gt; (28,320,097 samples, 0.34%)</title><rect x="951.3" y="421" width="4.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="954.30" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;int, long&gt;::operator= (80,599,503 samples, 0.97%)</title><rect x="957.1" y="501" width="11.5" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="960.06" y="511.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::pair&lt;int, long&gt; const&amp;&gt;::_Tuple_impl (14,396,161 samples, 0.17%)</title><rect x="1154.8" y="501" width="2.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="1157.82" y="511.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (9,072,012 samples, 0.11%)</title><rect x="10.0" y="613" width="1.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>iomap_dio_submit_bio (180,308,778 samples, 2.18%)</title><rect x="414.4" y="341" width="25.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="417.42" y="351.5" >i..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_right (69,628,460 samples, 0.84%)</title><rect x="1067.7" y="469" width="9.9" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1070.69" y="479.5" ></text>
</g>
<g >
<title>sg_alloc_table_chained (29,498,430 samples, 0.36%)</title><rect x="248.7" y="165" width="4.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="251.67" y="175.5" ></text>
</g>
<g >
<title>__find_get_block (21,414,735 samples, 0.26%)</title><rect x="483.7" y="181" width="3.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="486.71" y="191.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (14,667,813 samples, 0.18%)</title><rect x="523.5" y="245" width="2.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="526.46" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::equal_range (118,314,875 samples, 1.43%)</title><rect x="917.4" y="469" width="16.9" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="920.44" y="479.5" ></text>
</g>
<g >
<title>bdev_getblk (21,302,199 samples, 0.26%)</title><rect x="163.0" y="325" width="3.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="165.98" y="335.5" ></text>
</g>
<g >
<title>generic_write_check_limits (15,792,679 samples, 0.19%)</title><rect x="138.2" y="357" width="2.2" height="15.0" fill="rgb(206,9,2)" rx="2" ry="2" />
<text  x="141.18" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::end (12,923,491 samples, 0.16%)</title><rect x="838.7" y="501" width="1.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="841.70" y="511.5" ></text>
</g>
<g >
<title>get_file_descriptor (206,767,035 samples, 2.50%)</title><rect x="968.6" y="517" width="29.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="971.56" y="527.5" >ge..</text>
</g>
<g >
<title>blk_mq_unique_tag (50,613,965 samples, 0.61%)</title><rect x="194.1" y="213" width="7.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="197.12" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (16,693,531 samples, 0.20%)</title><rect x="776.6" y="341" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="779.62" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::operator (18,844,895 samples, 0.23%)</title><rect x="1169.6" y="533" width="2.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1172.57" y="543.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (101,575,379 samples, 1.23%)</title><rect x="679.5" y="293" width="14.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="682.46" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::equal_range (18,263,288 samples, 0.22%)</title><rect x="872.7" y="485" width="2.6" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="875.65" y="495.5" ></text>
</g>
<g >
<title>ext4_generic_write_checks (15,792,679 samples, 0.19%)</title><rect x="138.2" y="373" width="2.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="141.18" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_Rb_tree_iterator (20,511,443 samples, 0.25%)</title><rect x="1105.1" y="485" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1108.12" y="495.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,586,150 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_journal_mode (17,635,647 samples, 0.21%)</title><rect x="69.8" y="421" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="72.82" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::operator (16,532,569 samples, 0.20%)</title><rect x="1004.4" y="517" width="2.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1007.35" y="527.5" ></text>
</g>
<g >
<title>bool std::chrono::operator&lt; &lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (93,939,674 samples, 1.14%)</title><rect x="804.3" y="485" width="13.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="807.31" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_lower_bound (61,056,750 samples, 0.74%)</title><rect x="946.6" y="453" width="8.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="949.63" y="463.5" ></text>
</g>
<g >
<title>__schedule (670,309,028 samples, 8.10%)</title><rect x="257.4" y="309" width="95.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="260.44" y="319.5" >__schedule</text>
</g>
<g >
<title>virtqueue_kick_prepare (17,686,373 samples, 0.21%)</title><rect x="219.7" y="181" width="2.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="222.70" y="191.5" ></text>
</g>
<g >
<title>walk_component (1,586,150 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>sd_init_command (102,477,609 samples, 1.24%)</title><rect x="238.3" y="213" width="14.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="241.26" y="223.5" ></text>
</g>
<g >
<title>char* std::vector&lt;char, std::allocator&lt;char&gt; &gt;::_M_data_ptr&lt;char&gt; (18,145,479 samples, 0.22%)</title><rect x="91.0" y="533" width="2.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="94.02" y="543.5" ></text>
</g>
<g >
<title>lockless_pages_from_mm (129,430,331 samples, 1.56%)</title><rect x="375.4" y="261" width="18.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="378.37" y="271.5" ></text>
</g>
<g >
<title>handle_pte_fault (18,421,199 samples, 0.22%)</title><rect x="770.7" y="357" width="2.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="773.70" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,060,680 samples, 0.19%)</title><rect x="766.0" y="389" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="768.98" y="399.5" ></text>
</g>
<g >
<title>ext4_validate_block_bitmap (32,584,916 samples, 0.39%)</title><rect x="585.2" y="213" width="4.6" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="588.19" y="223.5" ></text>
</g>
<g >
<title>scsi_alloc_sgtables (50,562,602 samples, 0.61%)</title><rect x="245.7" y="181" width="7.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="248.67" y="191.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (46,138,595 samples, 0.56%)</title><rect x="924.5" y="437" width="6.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="927.47" y="447.5" ></text>
</g>
<g >
<title>pin_user_pages_fast (129,430,331 samples, 1.56%)</title><rect x="375.4" y="293" width="18.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="378.37" y="303.5" ></text>
</g>
<g >
<title>blk_io_schedule (682,903,758 samples, 8.26%)</title><rect x="257.4" y="357" width="97.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="260.44" y="367.5" >blk_io_sche..</text>
</g>
<g >
<title>__blk_mq_issue_directly (501,618,574 samples, 6.06%)</title><rect x="185.9" y="261" width="71.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="188.88" y="271.5" >__blk_mq..</text>
</g>
<g >
<title>intel_pmu_enable_all (31,570,426 samples, 0.38%)</title><rect x="287.6" y="229" width="4.5" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="290.55" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (16,532,569 samples, 0.20%)</title><rect x="1004.4" y="485" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1007.35" y="495.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (40,134,631 samples, 0.49%)</title><rect x="481.0" y="261" width="5.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="484.04" y="271.5" ></text>
</g>
<g >
<title>operator new (12,525,058 samples, 0.15%)</title><rect x="1016.6" y="437" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1019.60" y="447.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (23,100,925 samples, 0.28%)</title><rect x="773.3" y="277" width="3.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="776.32" y="287.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (13,077,967 samples, 0.16%)</title><rect x="257.4" y="293" width="1.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="260.44" y="303.5" ></text>
</g>
<g >
<title>mutex_lock (28,155,675 samples, 0.34%)</title><rect x="741.1" y="325" width="4.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="744.14" y="335.5" ></text>
</g>
<g >
<title>ext4_ext_search_left (13,730,332 samples, 0.17%)</title><rect x="489.3" y="293" width="2.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="492.32" y="303.5" ></text>
</g>
<g >
<title>_start (8,262,064,710 samples, 99.89%)</title><rect x="11.3" y="613" width="1178.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="14.29" y="623.5" >_start</text>
</g>
<g >
<title>ext4_dio_write_checks (130,927,326 samples, 1.58%)</title><rect x="138.2" y="389" width="18.7" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="141.18" y="399.5" ></text>
</g>
<g >
<title>ext4_ext_search_left (14,886,784 samples, 0.18%)</title><rect x="623.0" y="309" width="2.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="626.01" y="319.5" ></text>
</g>
<g >
<title> (12,301,090 samples, 0.15%)</title><rect x="971.9" y="485" width="1.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="974.90" y="495.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (14,334,604 samples, 0.17%)</title><rect x="160.9" y="373" width="2.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="163.93" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_key (71,056,796 samples, 0.86%)</title><rect x="1087.6" y="485" width="10.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1090.58" y="495.5" ></text>
</g>
<g >
<title>do_filp_open (1,586,150 samples, 0.02%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (22,478,691 samples, 0.27%)</title><rect x="292.1" y="229" width="3.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="295.06" y="239.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::zero (12,857,562 samples, 0.16%)</title><rect x="1141.2" y="389" width="1.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1144.19" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (14,437,559 samples, 0.17%)</title><rect x="1056.0" y="437" width="2.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1059.04" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (16,684,960 samples, 0.20%)</title><rect x="1092.6" y="469" width="2.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1095.57" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (18,081,431 samples, 0.22%)</title><rect x="1058.1" y="421" width="2.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1061.10" y="431.5" ></text>
</g>
<g >
<title>__blk_flush_plug (517,803,367 samples, 6.26%)</title><rect x="183.6" y="341" width="73.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="186.57" y="351.5" >__blk_fl..</text>
</g>
<g >
<title>iomap_iter (1,366,575,263 samples, 16.52%)</title><rect x="440.1" y="357" width="195.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="443.14" y="367.5" >iomap_iter</text>
</g>
<g >
<title>virtscsi_queuecommand (14,683,391 samples, 0.18%)</title><rect x="255.3" y="229" width="2.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="258.34" y="239.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (193,066,513 samples, 2.33%)</title><rect x="1127.3" y="501" width="27.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1130.27" y="511.5" >s..</text>
</g>
<g >
<title>bool std::operator&lt; &lt;int, long&gt; (21,607,895 samples, 0.26%)</title><rect x="946.6" y="437" width="3.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="949.63" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_left (43,936,209 samples, 0.53%)</title><rect x="911.2" y="469" width="6.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="914.17" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (10,611,050 samples, 0.13%)</title><rect x="671.5" y="325" width="1.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="674.51" y="335.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1,586,150 samples, 0.02%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>blk_mq_get_tag (9,396,508 samples, 0.11%)</title><rect x="433.1" y="245" width="1.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="436.14" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (37,214,945 samples, 0.45%)</title><rect x="610.1" y="277" width="5.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="613.08" y="287.5" ></text>
</g>
<g >
<title>operator new (13,046,917 samples, 0.16%)</title><rect x="1134.8" y="437" width="1.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1137.75" y="447.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (23,100,925 samples, 0.28%)</title><rect x="773.3" y="373" width="3.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="776.32" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (61,917,732 samples, 0.75%)</title><rect x="902.3" y="453" width="8.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="905.34" y="463.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_List_node&lt;std::pair&lt;int, long&gt; &gt; &gt;::allocate (12,525,058 samples, 0.15%)</title><rect x="1016.6" y="453" width="1.8" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1019.60" y="463.5" ></text>
</g>
<g >
<title>__find_get_block (21,302,199 samples, 0.26%)</title><rect x="163.0" y="309" width="3.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="165.98" y="319.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, long&gt; &gt;::operator (16,713,429 samples, 0.20%)</title><rect x="944.2" y="485" width="2.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="947.24" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::end (18,025,048 samples, 0.22%)</title><rect x="1006.7" y="517" width="2.6" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1009.71" y="527.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,586,150 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>ext4_sb_block_valid (95,439,564 samples, 1.15%)</title><rect x="563.0" y="245" width="13.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="565.95" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_put_node (77,618,986 samples, 0.94%)</title><rect x="889.5" y="421" width="11.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="892.51" y="431.5" ></text>
</g>
<g >
<title>ext4_ext_insert_extent (48,637,520 samples, 0.59%)</title><rect x="479.8" y="293" width="7.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="482.83" y="303.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (129,249,973 samples, 1.56%)</title><rect x="396.0" y="325" width="18.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="398.98" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (182,353,181 samples, 2.20%)</title><rect x="755.8" y="485" width="26.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="758.77" y="495.5" >[..</text>
</g>
<g >
<title>ext4_mb_mark_diskspace_used (269,347,292 samples, 3.26%)</title><rect x="557.7" y="277" width="38.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="560.74" y="287.5" >ext..</text>
</g>
<g >
<title>cfree (61,589,881 samples, 0.74%)</title><rect x="783.2" y="517" width="8.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="786.21" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (17,419,892 samples, 0.21%)</title><rect x="669.0" y="293" width="2.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="672.02" y="303.5" ></text>
</g>
<g >
<title>jbd2_journal_file_inode (23,536,993 samples, 0.28%)</title><rect x="628.1" y="277" width="3.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="631.11" y="287.5" ></text>
</g>
<g >
<title>std::operator== (11,556,106 samples, 0.14%)</title><rect x="1156.9" y="501" width="1.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1159.87" y="511.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (14,468,769 samples, 0.17%)</title><rect x="594.1" y="261" width="2.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="597.10" y="271.5" ></text>
</g>
<g >
<title>ext4_ext_index_trans_blocks (15,117,034 samples, 0.18%)</title><rect x="451.7" y="325" width="2.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="454.67" y="335.5" ></text>
</g>
<g >
<title>ext4_mb_release_context (20,594,709 samples, 0.25%)</title><rect x="596.2" y="277" width="2.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="599.16" y="287.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (517,803,367 samples, 6.26%)</title><rect x="183.6" y="325" width="73.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="186.57" y="335.5" >blk_mq_f..</text>
</g>
<g >
<title>ext4_dio_write_end_io (671,887,499 samples, 8.12%)</title><rect x="651.7" y="357" width="95.9" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="654.73" y="367.5" >ext4_dio_wr..</text>
</g>
<g >
<title>virtscsi_queuecommand (209,644,923 samples, 2.53%)</title><rect x="204.7" y="213" width="29.9" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="207.68" y="223.5" >vi..</text>
</g>
<g >
<title>__x64_sys_pread64 (256,167,815 samples, 3.10%)</title><rect x="54.5" y="469" width="36.5" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="57.48" y="479.5" >__x..</text>
</g>
<g >
<title>hrtimer_interrupt (23,100,925 samples, 0.28%)</title><rect x="773.3" y="309" width="3.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="776.32" y="319.5" ></text>
</g>
<g >
<title>ext4_orphan_del (90,800,218 samples, 1.10%)</title><rect x="728.2" y="325" width="12.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="731.18" y="335.5" ></text>
</g>
<g >
<title>path_openat (1,586,150 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>posix_memalign (16,868,557 samples, 0.20%)</title><rect x="1001.9" y="517" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1004.94" y="527.5" ></text>
</g>
<g >
<title>file_modified (44,555,877 samples, 0.54%)</title><rect x="140.4" y="373" width="6.4" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="143.43" y="383.5" ></text>
</g>
<g >
<title>__get_user_8 (30,812,996 samples, 0.37%)</title><rect x="116.6" y="421" width="4.3" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="119.55" y="431.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (14,398,120 samples, 0.17%)</title><rect x="728.2" y="293" width="2.0" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="731.18" y="303.5" ></text>
</g>
<g >
<title>lookup_bh_lru (25,449,961 samples, 0.31%)</title><rect x="536.7" y="149" width="3.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="539.71" y="159.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (15,524,829 samples, 0.19%)</title><rect x="350.9" y="245" width="2.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="353.85" y="255.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, long&gt; &gt;::operator (39,448,855 samples, 0.48%)</title><rect x="949.7" y="437" width="5.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="952.71" y="447.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (48,880,094 samples, 0.59%)</title><rect x="529.7" y="213" width="7.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="532.74" y="223.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::end (13,965,074 samples, 0.17%)</title><rect x="1185.4" y="533" width="2.0" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1188.42" y="543.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (18,239,730 samples, 0.22%)</title><rect x="72.3" y="373" width="2.6" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="75.33" y="383.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (12,135,450 samples, 0.15%)</title><rect x="285.8" y="261" width="1.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="288.82" y="271.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (31,063,435 samples, 0.38%)</title><rect x="140.4" y="309" width="4.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="143.43" y="319.5" ></text>
</g>
<g >
<title>bio_associate_blkg (68,819,490 samples, 0.83%)</title><rect x="398.1" y="309" width="9.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="401.05" y="319.5" ></text>
</g>
<g >
<title>blkcg_set_ioprio (11,989,420 samples, 0.14%)</title><rect x="414.4" y="309" width="1.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="417.42" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_ptr (13,650,756 samples, 0.17%)</title><rect x="922.5" y="437" width="2.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="925.52" y="447.5" ></text>
</g>
<g >
<title>x64_sys_call (268,590,884 samples, 3.25%)</title><rect x="52.7" y="485" width="38.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="55.70" y="495.5" >x64..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (23,100,925 samples, 0.28%)</title><rect x="773.3" y="325" width="3.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="776.32" y="335.5" ></text>
</g>
<g >
<title>make_vfsuid (15,186,126 samples, 0.18%)</title><rect x="79.1" y="405" width="2.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="82.10" y="415.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::operator (14,194,168 samples, 0.17%)</title><rect x="979.0" y="437" width="2.0" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="981.99" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,586,150 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (58,752,232 samples, 0.71%)</title><rect x="694.0" y="293" width="8.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="696.95" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_upper_bound (17,142,207 samples, 0.21%)</title><rect x="920.1" y="453" width="2.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="923.08" y="463.5" ></text>
</g>
<g >
<title>__rq_qos_throttle (12,853,720 samples, 0.16%)</title><rect x="426.5" y="245" width="1.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="429.51" y="255.5" ></text>
</g>
<g >
<title>blk_finish_plug (517,803,367 samples, 6.26%)</title><rect x="183.6" y="357" width="73.8" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="186.57" y="367.5" >blk_fini..</text>
</g>
<g >
<title>__rcu_read_unlock (16,432,622 samples, 0.20%)</title><rect x="709.3" y="261" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="712.34" y="271.5" ></text>
</g>
<g >
<title>update_load_avg (39,624,110 samples, 0.48%)</title><rect x="276.0" y="245" width="5.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="278.99" y="255.5" ></text>
</g>
<g >
<title>stop_this_handle (10,611,050 samples, 0.13%)</title><rect x="671.5" y="293" width="1.5" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="674.51" y="303.5" ></text>
</g>
<g >
<title>__find_get_block (13,838,614 samples, 0.17%)</title><rect x="501.6" y="245" width="2.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="504.58" y="255.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_M_begin (14,973,548 samples, 0.18%)</title><rect x="975.2" y="469" width="2.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="978.22" y="479.5" ></text>
</g>
<g >
<title>native_write_msr (31,570,426 samples, 0.38%)</title><rect x="287.6" y="213" width="4.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="290.55" y="223.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (49,162,796 samples, 0.59%)</title><rect x="861.9" y="469" width="7.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="864.88" y="479.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (14,104,365 samples, 0.17%)</title><rect x="739.1" y="293" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="742.12" y="303.5" ></text>
</g>
<g >
<title>lab2_write (7,516,847,807 samples, 90.88%)</title><rect x="97.2" y="533" width="1072.4" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="100.18" y="543.5" >lab2_write</text>
</g>
<g >
<title>update_rq_clock (15,524,829 samples, 0.19%)</title><rect x="350.9" y="293" width="2.2" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="353.85" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::lower_bound (61,056,750 samples, 0.74%)</title><rect x="946.6" y="485" width="8.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="949.63" y="495.5" ></text>
</g>
<g >
<title>scsi_init_command (12,029,145 samples, 0.15%)</title><rect x="236.5" y="213" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="239.54" y="223.5" ></text>
</g>
<g >
<title>x86_pmu_disable (15,416,061 samples, 0.19%)</title><rect x="325.7" y="229" width="2.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="328.75" y="239.5" ></text>
</g>
<g >
<title>ext4_map_blocks (11,908,592 samples, 0.14%)</title><rect x="633.4" y="341" width="1.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="636.41" y="351.5" ></text>
</g>
<g >
<title>__kmalloc (14,133,112 samples, 0.17%)</title><rect x="499.6" y="277" width="2.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="502.57" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (12,271,958 samples, 0.15%)</title><rect x="900.6" y="421" width="1.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="903.58" y="431.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read_nowd (15,524,829 samples, 0.19%)</title><rect x="350.9" y="213" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="353.85" y="223.5" ></text>
</g>
<g >
<title>lookup_bh_lru (21,302,199 samples, 0.26%)</title><rect x="163.0" y="293" width="3.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="165.98" y="303.5" ></text>
</g>
<g >
<title>blk_start_plug (15,280,032 samples, 0.18%)</title><rect x="645.1" y="373" width="2.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="648.07" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (17,036,437 samples, 0.21%)</title><rect x="768.3" y="325" width="2.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="771.27" y="335.5" ></text>
</g>
<g >
<title>account_user_time (13,736,567 samples, 0.17%)</title><rect x="104.8" y="357" width="2.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="107.81" y="367.5" ></text>
</g>
<g >
<title>__find_get_block (41,646,850 samples, 0.50%)</title><rect x="711.7" y="245" width="5.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="714.68" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (22,478,691 samples, 0.27%)</title><rect x="292.1" y="133" width="3.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="295.06" y="143.5" ></text>
</g>
<g >
<title>ext4_es_delayed_clu (17,064,060 samples, 0.21%)</title><rect x="460.4" y="309" width="2.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="463.43" y="319.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,586,150 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::erase (37,586,718 samples, 0.45%)</title><rect x="840.5" y="501" width="5.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="843.54" y="511.5" ></text>
</g>
<g >
<title>clear_bhb_loop (15,202,231 samples, 0.18%)</title><rect x="46.2" y="501" width="2.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="49.17" y="511.5" ></text>
</g>
<g >
<title>iov_iter_alignment (10,099,354 samples, 0.12%)</title><rect x="750.0" y="389" width="1.4" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="752.95" y="399.5" ></text>
</g>
<g >
<title>__wake_up (10,611,050 samples, 0.13%)</title><rect x="671.5" y="277" width="1.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="674.51" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_const_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_Rb_tree_const_iterator (11,780,184 samples, 0.14%)</title><rect x="1125.6" y="501" width="1.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1128.59" y="511.5" ></text>
</g>
<g >
<title>kmem_cache_free (12,617,040 samples, 0.15%)</title><rect x="615.4" y="277" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="618.38" y="287.5" ></text>
</g>
<g >
<title>update_curr_se (25,585,296 samples, 0.31%)</title><rect x="272.3" y="229" width="3.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="275.34" y="239.5" ></text>
</g>
<g >
<title>__common_interrupt (7,071,793 samples, 0.09%)</title><rect x="10.2" y="357" width="1.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.23" y="367.5" ></text>
</g>
<g >
<title>std::map&lt;int, FileDescriptor, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::find (138,511,643 samples, 1.67%)</title><rect x="975.2" y="501" width="19.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="978.22" y="511.5" ></text>
</g>
<g >
<title>jbd2_journal_file_inode (20,852,902 samples, 0.25%)</title><rect x="625.1" y="293" width="3.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="628.13" y="303.5" ></text>
</g>
<g >
<title>perf_ctx_disable (15,416,061 samples, 0.19%)</title><rect x="325.7" y="245" width="2.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="328.75" y="255.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (12,048,255 samples, 0.15%)</title><rect x="143.1" y="293" width="1.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="146.14" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (19,509,846 samples, 0.24%)</title><rect x="779.0" y="437" width="2.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="782.00" y="447.5" ></text>
</g>
<g >
<title>sched_clock (14,896,331 samples, 0.18%)</title><rect x="348.7" y="261" width="2.2" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="351.73" y="271.5" ></text>
</g>
<g >
<title>radix_tree_lookup (14,111,144 samples, 0.17%)</title><rect x="405.9" y="293" width="2.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="408.86" y="303.5" ></text>
</g>
<g >
<title>ext4_es_lookup_extent (15,140,684 samples, 0.18%)</title><rect x="466.8" y="309" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="469.78" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::_M_inc_size (32,442,540 samples, 0.39%)</title><rect x="1009.3" y="501" width="4.6" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1012.28" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,865,325 samples, 0.20%)</title><rect x="243.3" y="117" width="2.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="246.26" y="127.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (18,719,896 samples, 0.23%)</title><rect x="481.0" y="213" width="2.7" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="484.04" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1,586,150 samples, 0.02%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;::pair&lt;std::pair&lt;int, long&gt; const&amp;, 0ul&gt; (12,857,562 samples, 0.16%)</title><rect x="1141.2" y="421" width="1.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1144.19" y="431.5" ></text>
</g>
<g >
<title>ext4_dio_write_end_io (19,925,463 samples, 0.24%)</title><rect x="647.3" y="373" width="2.8" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="650.25" y="383.5" ></text>
</g>
<g >
<title>sg_init_table (13,253,235 samples, 0.16%)</title><rect x="251.0" y="149" width="1.9" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="253.99" y="159.5" ></text>
</g>
<g >
<title>update_process_times (13,736,567 samples, 0.17%)</title><rect x="104.8" y="389" width="2.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="107.81" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (58,558,561 samples, 0.71%)</title><rect x="768.3" y="421" width="8.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="771.27" y="431.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,198,616 samples, 1.85%)</title><rect x="757.1" y="469" width="21.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="760.15" y="479.5" >[..</text>
</g>
<g >
<title>bio_iov_iter_get_pages (206,250,025 samples, 2.49%)</title><rect x="366.6" y="341" width="29.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="369.56" y="351.5" >bi..</text>
</g>
<g >
<title>ext4_get_group_info (17,674,073 samples, 0.21%)</title><rect x="587.3" y="197" width="2.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="590.32" y="207.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (19,188,629 samples, 0.23%)</title><rect x="446.4" y="325" width="2.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="449.37" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::size (56,837,699 samples, 0.69%)</title><rect x="936.1" y="485" width="8.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="939.13" y="495.5" ></text>
</g>
<g >
<title>mb_set_bits (11,529,396 samples, 0.14%)</title><rect x="592.5" y="261" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="595.45" y="271.5" ></text>
</g>
<g >
<title>std::_List_node&lt;std::pair&lt;int, long&gt; &gt;* std::__cxx11::list&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;int, long&gt; const&amp;&gt; (29,218,105 samples, 0.35%)</title><rect x="1016.6" y="485" width="4.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1019.60" y="495.5" ></text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (17,599,185 samples, 0.21%)</title><rect x="529.7" y="197" width="2.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="532.74" y="207.5" ></text>
</g>
<g >
<title>virtqueue_add_split (14,824,968 samples, 0.18%)</title><rect x="217.6" y="149" width="2.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="220.59" y="159.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (66,184,567 samples, 0.80%)</title><rect x="285.8" y="293" width="9.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="288.82" y="303.5" ></text>
</g>
<g >
<title>[[vdso]] (63,975,855 samples, 0.77%)</title><rect x="1176.3" y="501" width="9.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1179.30" y="511.5" ></text>
</g>
<g >
<title>submit_bio_noacct (168,319,358 samples, 2.04%)</title><rect x="416.1" y="309" width="24.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="419.13" y="319.5" >s..</text>
</g>
<g >
<title>__ext4_journal_stop (18,239,730 samples, 0.22%)</title><rect x="72.3" y="357" width="2.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="75.33" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (17,036,437 samples, 0.21%)</title><rect x="768.3" y="309" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="771.27" y="319.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (43,223,327 samples, 0.52%)</title><rect x="536.7" y="229" width="6.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="539.71" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (48,657,675 samples, 0.59%)</title><rect x="81.3" y="437" width="6.9" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="84.27" y="447.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (14,474,631 samples, 0.18%)</title><rect x="663.2" y="341" width="2.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="666.23" y="351.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (31,280,909 samples, 0.38%)</title><rect x="532.2" y="197" width="4.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="535.25" y="207.5" ></text>
</g>
<g >
<title>__blk_bios_map_sg (21,064,172 samples, 0.25%)</title><rect x="245.7" y="149" width="3.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="248.67" y="159.5" ></text>
</g>
<g >
<title>jbd2_journal_dirty_metadata (13,471,687 samples, 0.16%)</title><rect x="682.5" y="261" width="1.9" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="685.47" y="271.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (16,694,101 samples, 0.20%)</title><rect x="316.2" y="229" width="2.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="319.19" y="239.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (44,306,287 samples, 0.54%)</title><rect x="163.0" y="341" width="6.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="165.98" y="351.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::erase (501,802,277 samples, 6.07%)</title><rect x="872.7" y="501" width="71.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="875.65" y="511.5" >std::map..</text>
</g>
<g >
<title>iomap_dio_rw (4,054,812,560 samples, 49.02%)</title><rect x="171.5" y="389" width="578.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="174.47" y="399.5" >iomap_dio_rw</text>
</g>
<g >
<title>__ext4_handle_dirty_metadata (13,471,687 samples, 0.16%)</title><rect x="682.5" y="277" width="1.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="685.47" y="287.5" ></text>
</g>
<g >
<title>update_load_avg (14,530,092 samples, 0.18%)</title><rect x="283.7" y="261" width="2.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="286.75" y="271.5" ></text>
</g>
<g >
<title>blk_io_schedule (14,386,863 samples, 0.17%)</title><rect x="643.0" y="373" width="2.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="646.02" y="383.5" ></text>
</g>
<g >
<title>__es_remove_extent (16,595,753 samples, 0.20%)</title><rect x="458.1" y="309" width="2.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="461.06" y="319.5" ></text>
</g>
<g >
<title>ext4_inode_table (11,225,938 samples, 0.14%)</title><rect x="726.6" y="277" width="1.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="729.58" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16,060,680 samples, 0.19%)</title><rect x="766.0" y="405" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="768.98" y="415.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::operator (19,423,621 samples, 0.23%)</title><rect x="1094.9" y="469" width="2.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1097.95" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_Auto_node::_M_key (14,597,496 samples, 0.18%)</title><rect x="1120.3" y="501" width="2.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1123.26" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::push_back (15,536,344 samples, 0.19%)</title><rect x="1172.3" y="533" width="2.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1175.26" y="543.5" ></text>
</g>
<g >
<title>sched_clock_cpu (14,896,331 samples, 0.18%)</title><rect x="348.7" y="277" width="2.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="351.73" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (14,604,761 samples, 0.18%)</title><rect x="1152.7" y="485" width="2.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1155.73" y="495.5" ></text>
</g>
<g >
<title>ext4_es_insert_extent (27,428,780 samples, 0.33%)</title><rect x="462.9" y="309" width="3.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="465.86" y="319.5" ></text>
</g>
<g >
<title>lookup_fast (1,586,150 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>_raw_read_lock (28,078,661 samples, 0.34%)</title><rect x="542.9" y="277" width="4.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="545.88" y="287.5" ></text>
</g>
<g >
<title>pick_next_task (213,660,303 samples, 2.58%)</title><rect x="295.3" y="293" width="30.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="298.27" y="303.5" >pi..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_Auto_node::_Auto_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (125,238,176 samples, 1.51%)</title><rect x="1127.3" y="485" width="17.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1130.27" y="495.5" ></text>
</g>
<g >
<title>update_load_avg (22,478,691 samples, 0.27%)</title><rect x="292.1" y="117" width="3.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="295.06" y="127.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_ptr (49,162,796 samples, 0.59%)</title><rect x="861.9" y="453" width="7.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="864.88" y="463.5" ></text>
</g>
<g >
<title>__handle_mm_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="469" width="1.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.23" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_end (11,162,296 samples, 0.13%)</title><rect x="882.0" y="469" width="1.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="885.04" y="479.5" ></text>
</g>
<g >
<title>writebench (8,176,914,950 samples, 98.86%)</title><rect x="23.4" y="549" width="1166.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="26.44" y="559.5" >writebench</text>
</g>
<g >
<title>hrtimer_interrupt (16,865,325 samples, 0.20%)</title><rect x="243.3" y="133" width="2.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="246.26" y="143.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;::_M_valptr (34,119,849 samples, 0.41%)</title><rect x="981.0" y="453" width="4.9" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="984.01" y="463.5" ></text>
</g>
<g >
<title>ext4_mb_mark_context (111,342,988 samples, 1.35%)</title><rect x="576.6" y="261" width="15.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="579.57" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (22,478,691 samples, 0.27%)</title><rect x="292.1" y="261" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="295.06" y="271.5" ></text>
</g>
<g >
<title>ext4_handle_inode_extension (576,837,251 samples, 6.97%)</title><rect x="665.3" y="341" width="82.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="668.29" y="351.5" >ext4_hand..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (65,930,357 samples, 0.80%)</title><rect x="113.8" y="469" width="9.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="116.75" y="479.5" ></text>
</g>
<g >
<title>invalidate_inode_pages2_range (15,751,677 samples, 0.19%)</title><rect x="635.1" y="341" width="2.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="638.11" y="351.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,586,150 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>internal_get_user_pages_fast (129,430,331 samples, 1.56%)</title><rect x="375.4" y="277" width="18.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="378.37" y="287.5" ></text>
</g>
<g >
<title>do_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="437" width="1.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.23" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (19,509,846 samples, 0.24%)</title><rect x="779.0" y="421" width="2.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="782.00" y="431.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (31,063,435 samples, 0.38%)</title><rect x="140.4" y="341" width="4.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="143.43" y="351.5" ></text>
</g>
<g >
<title>__find_get_block (25,449,961 samples, 0.31%)</title><rect x="536.7" y="165" width="3.6" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="539.71" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (299,193,547 samples, 3.62%)</title><rect x="48.3" y="501" width="42.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.34" y="511.5" >do_s..</text>
</g>
<g >
<title>__cond_resched (18,555,893 samples, 0.22%)</title><rect x="706.7" y="261" width="2.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="709.69" y="271.5" ></text>
</g>
<g >
<title>bio_alloc_bioset (33,494,578 samples, 0.40%)</title><rect x="361.8" y="341" width="4.8" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="364.78" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_key (59,789,351 samples, 0.72%)</title><rect x="922.5" y="453" width="8.6" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="925.52" y="463.5" ></text>
</g>
<g >
<title>bdev_getblk (43,223,327 samples, 0.52%)</title><rect x="536.7" y="181" width="6.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="539.71" y="191.5" ></text>
</g>
<g >
<title>apparmor_file_permission (10,141,110 samples, 0.12%)</title><rect x="751.4" y="405" width="1.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="754.39" y="415.5" ></text>
</g>
<g >
<title>bdev_getblk (13,838,614 samples, 0.17%)</title><rect x="501.6" y="261" width="2.0" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="504.58" y="271.5" ></text>
</g>
<g >
<title>folio_mark_accessed (12,895,161 samples, 0.16%)</title><rect x="581.5" y="181" width="1.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="584.52" y="191.5" ></text>
</g>
<g >
<title>ext4_mb_new_blocks (765,849,511 samples, 9.26%)</title><rect x="507.9" y="293" width="109.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="510.92" y="303.5" >ext4_mb_new_b..</text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::operator[] (316,766,342 samples, 3.83%)</title><rect x="1118.3" y="517" width="45.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1121.29" y="527.5" >std:..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (13,736,567 samples, 0.17%)</title><rect x="104.8" y="501" width="2.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="107.81" y="511.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (20,155,734 samples, 0.24%)</title><rect x="520.6" y="261" width="2.9" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="523.59" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_lower_bound (373,984,272 samples, 4.52%)</title><rect x="1034.2" y="485" width="53.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1037.23" y="495.5" >std::..</text>
</g>
<g >
<title>update_process_times (16,693,531 samples, 0.20%)</title><rect x="776.6" y="325" width="2.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="779.62" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (85,149,760 samples, 1.03%)</title><rect x="11.3" y="549" width="12.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="14.29" y="559.5" ></text>
</g>
<g >
<title>submit_bio_noacct_nocheck (168,319,358 samples, 2.04%)</title><rect x="416.1" y="293" width="24.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="419.13" y="303.5" >s..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (30,602,663 samples, 0.37%)</title><rect x="48.3" y="485" width="4.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="51.34" y="495.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (58,558,561 samples, 0.71%)</title><rect x="768.3" y="437" width="8.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="771.27" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::end (31,776,760 samples, 0.38%)</title><rect x="1028.1" y="501" width="4.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1031.10" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_S_key (15,629,001 samples, 0.19%)</title><rect x="985.9" y="453" width="2.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="988.88" y="463.5" ></text>
</g>
<g >
<title>jbd2_journal_inode_ranged_write (23,536,993 samples, 0.28%)</title><rect x="628.1" y="293" width="3.4" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="631.11" y="303.5" ></text>
</g>
<g >
<title>__update_load_avg_se (22,791,583 samples, 0.28%)</title><rect x="278.4" y="229" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="281.39" y="239.5" ></text>
</g>
<g >
<title>map_id_up (19,015,180 samples, 0.23%)</title><rect x="140.4" y="229" width="2.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="143.43" y="239.5" ></text>
</g>
<g >
<title>std::operator!= (12,741,828 samples, 0.15%)</title><rect x="934.3" y="469" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="937.32" y="479.5" ></text>
</g>
<g >
<title>__radix_tree_lookup (14,266,330 samples, 0.17%)</title><rect x="401.4" y="277" width="2.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="404.39" y="287.5" ></text>
</g>
<g >
<title>generic_update_time (31,063,435 samples, 0.38%)</title><rect x="140.4" y="357" width="4.5" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="143.43" y="367.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::find (600,410,936 samples, 7.26%)</title><rect x="1032.6" y="501" width="85.7" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1035.63" y="511.5" >std::_Rb_t..</text>
</g>
<g >
<title>ext4_dio_write_iter (4,384,636,152 samples, 53.01%)</title><rect x="125.9" y="405" width="625.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="128.86" y="415.5" >ext4_dio_write_iter</text>
</g>
<g >
<title>ext4_group_desc_csum_set (21,832,888 samples, 0.26%)</title><rect x="559.8" y="261" width="3.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="562.84" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (16,693,531 samples, 0.20%)</title><rect x="776.6" y="309" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="779.62" y="319.5" ></text>
</g>
<g >
<title>generic_write_checks (15,561,269 samples, 0.19%)</title><rect x="154.6" y="373" width="2.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="157.64" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (22,478,691 samples, 0.27%)</title><rect x="292.1" y="101" width="3.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="295.06" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (22,478,691 samples, 0.27%)</title><rect x="292.1" y="245" width="3.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="295.06" y="255.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (15,524,829 samples, 0.19%)</title><rect x="350.9" y="229" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="353.85" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (16,718,797 samples, 0.20%)</title><rect x="926.6" y="421" width="2.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="929.57" y="431.5" ></text>
</g>
<g >
<title>ext4_dirty_inode (31,063,435 samples, 0.38%)</title><rect x="140.4" y="325" width="4.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="143.43" y="335.5" ></text>
</g>
<g >
<title>all (8,271,136,723 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (50,546,024 samples, 0.61%)</title><rect x="128.6" y="373" width="7.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="131.63" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (15,094,825 samples, 0.18%)</title><rect x="81.3" y="421" width="2.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="84.27" y="431.5" ></text>
</g>
<g >
<title>__do_sys_brk (16,060,680 samples, 0.19%)</title><rect x="766.0" y="341" width="2.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="768.98" y="351.5" ></text>
</g>
<g >
<title>profile_tick (23,100,925 samples, 0.28%)</title><rect x="773.3" y="261" width="3.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="776.32" y="271.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (12,764,166 samples, 0.15%)</title><rect x="1174.5" y="517" width="1.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1177.47" y="527.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_Rb_tree_iterator (19,113,095 samples, 0.23%)</title><rect x="1145.1" y="469" width="2.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1148.14" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (43,760,520 samples, 0.53%)</title><rect x="830.1" y="485" width="6.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="833.14" y="495.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (29,741,728 samples, 0.36%)</title><rect x="659.0" y="341" width="4.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="661.99" y="351.5" ></text>
</g>
<g >
<title>ext4_claim_free_clusters (63,375,489 samples, 0.77%)</title><rect x="546.9" y="277" width="9.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="549.88" y="287.5" ></text>
</g>
<g >
<title>__rq_qos_track (17,730,818 samples, 0.21%)</title><rect x="428.3" y="245" width="2.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="431.34" y="255.5" ></text>
</g>
<g >
<title>free@plt (25,833,205 samples, 0.31%)</title><rect x="889.5" y="405" width="3.7" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="892.51" y="415.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (25,993,254 samples, 0.31%)</title><rect x="684.4" y="277" width="3.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="687.39" y="287.5" ></text>
</g>
<g >
<title>iomap_dio_alloc_bio.isra.0 (129,249,973 samples, 1.56%)</title><rect x="396.0" y="341" width="18.4" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="398.98" y="351.5" ></text>
</g>
<g >
<title>bool std::operator&lt; &lt;int, long&gt; (69,767,233 samples, 0.84%)</title><rect x="1077.6" y="453" width="10.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1080.63" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (153,198,616 samples, 1.85%)</title><rect x="757.1" y="453" width="21.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="760.15" y="463.5" >[..</text>
</g>
<g >
<title>timestamp_truncate (16,240,099 samples, 0.20%)</title><rect x="74.9" y="389" width="2.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="77.93" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_disable (22,913,765 samples, 0.28%)</title><rect x="327.9" y="245" width="3.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="330.95" y="255.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (14,104,365 samples, 0.17%)</title><rect x="739.1" y="277" width="2.0" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="742.12" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_right (18,648,786 samples, 0.23%)</title><rect x="1097.7" y="485" width="2.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="1100.72" y="495.5" ></text>
</g>
<g >
<title>task_tick_fair (16,693,531 samples, 0.20%)</title><rect x="776.6" y="293" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="779.62" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (16,532,569 samples, 0.20%)</title><rect x="1004.4" y="469" width="2.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="1007.35" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (23,100,925 samples, 0.28%)</title><rect x="773.3" y="341" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="776.32" y="351.5" ></text>
</g>
<g >
<title>ext4_read_block_bitmap (58,338,481 samples, 0.71%)</title><rect x="581.5" y="245" width="8.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="584.52" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (18,849,004 samples, 0.23%)</title><rect x="1013.9" y="501" width="2.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1016.91" y="511.5" ></text>
</g>
<g >
<title>__bio_iov_iter_get_pages (172,540,965 samples, 2.09%)</title><rect x="369.2" y="325" width="24.6" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="372.22" y="335.5" >_..</text>
</g>
<g >
<title>wbt_track (17,730,818 samples, 0.21%)</title><rect x="428.3" y="229" width="2.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="431.34" y="239.5" ></text>
</g>
<g >
<title>vfs_write (4,413,694,103 samples, 53.36%)</title><rect x="123.2" y="437" width="629.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="126.16" y="447.5" >vfs_write</text>
</g>
<g >
<title>__blk_mq_alloc_requests (34,113,237 samples, 0.41%)</title><rect x="421.6" y="245" width="4.9" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="424.64" y="255.5" ></text>
</g>
<g >
<title>bio_associate_blkg_from_css (44,236,004 samples, 0.53%)</title><rect x="399.5" y="293" width="6.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="402.55" y="303.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_M_mbegin (14,973,548 samples, 0.18%)</title><rect x="975.2" y="453" width="2.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="978.22" y="463.5" ></text>
</g>
<g >
<title>memset_orig (16,245,195 samples, 0.20%)</title><rect x="248.7" y="149" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="251.67" y="159.5" ></text>
</g>
<g >
<title>void std::__cxx11::list&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::_M_insert&lt;std::pair&lt;int, long&gt; const&amp;&gt; (58,784,016 samples, 0.71%)</title><rect x="1016.6" y="501" width="8.4" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1019.60" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;std::_List_node&lt;std::pair&lt;int, long&gt; &gt; &gt;* std::__addressof&lt;std::allocator&lt;std::_List_node&lt;std::pair&lt;int, long&gt; &gt; &gt; &gt; (16,693,047 samples, 0.20%)</title><rect x="1018.4" y="469" width="2.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1021.39" y="479.5" ></text>
</g>
<g >
<title>__bio_add_page (18,657,890 samples, 0.23%)</title><rect x="366.6" y="325" width="2.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="369.56" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (8,262,064,710 samples, 99.89%)</title><rect x="11.3" y="581" width="1178.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="14.29" y="591.5" >[libc.so.6]</text>
</g>
<g >
<title>ext4_inode_block_valid (95,439,564 samples, 1.15%)</title><rect x="563.0" y="261" width="13.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="565.95" y="271.5" ></text>
</g>
<g >
<title>do_brk_flags (16,060,680 samples, 0.19%)</title><rect x="766.0" y="325" width="2.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="768.98" y="335.5" ></text>
</g>
<g >
<title>kiocb_invalidate_post_direct_write (16,558,615 samples, 0.20%)</title><rect x="747.6" y="373" width="2.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="750.59" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;int, std::pair&lt;int const, FileDescriptor&gt;, std::_Select1st&lt;std::pair&lt;int const, FileDescriptor&gt; &gt;, std::less&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, FileDescriptor&gt; &gt; &gt;::_S_key (14,194,168 samples, 0.17%)</title><rect x="979.0" y="453" width="2.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="981.99" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;&gt;&amp;&amp; std::forward&lt;std::tuple&lt;&gt; &gt; (19,362,666 samples, 0.23%)</title><rect x="1136.6" y="453" width="2.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1139.61" y="463.5" ></text>
</g>
<g >
<title>iowrite16 (63,002,724 samples, 0.76%)</title><rect x="223.9" y="165" width="9.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="226.90" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (8,262,064,710 samples, 99.89%)</title><rect x="11.3" y="597" width="1178.7" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="14.29" y="607.5" >__libc_start_main</text>
</g>
<g >
<title>ext4_es_delayed_clu (43,873,229 samples, 0.53%)</title><rect x="471.1" y="293" width="6.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="474.09" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (13,736,567 samples, 0.17%)</title><rect x="104.8" y="469" width="2.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="107.81" y="479.5" ></text>
</g>
<g >
<title>handle_mm_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="485" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.23" y="495.5" ></text>
</g>
<g >
<title>__libc_pread (330,220,909 samples, 3.99%)</title><rect x="43.9" y="533" width="47.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="46.91" y="543.5" >__li..</text>
</g>
<g >
<title>ext4_reserve_inode_write (14,104,365 samples, 0.17%)</title><rect x="739.1" y="309" width="2.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="742.12" y="319.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::end (4,486,731 samples, 0.05%)</title><rect x="1125.0" y="501" width="0.6" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1127.95" y="511.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (13,736,567 samples, 0.17%)</title><rect x="104.8" y="341" width="2.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="107.81" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_addr (14,677,811 samples, 0.18%)</title><rect x="929.0" y="405" width="2.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="931.96" y="415.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (19,113,095 samples, 0.23%)</title><rect x="1145.1" y="485" width="2.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1148.14" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::_M_inc_size (14,927,295 samples, 0.18%)</title><rect x="1022.9" y="485" width="2.1" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="1025.86" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,865,325 samples, 0.20%)</title><rect x="243.3" y="165" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="246.26" y="175.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt; &gt;::type&amp; std::get&lt;0ul, std::pair&lt;int, long&gt; const&amp;&gt; (14,855,687 samples, 0.18%)</title><rect x="1143.0" y="421" width="2.1" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1146.02" y="431.5" ></text>
</g>
<g >
<title>scsi_prepare_cmd (128,201,995 samples, 1.55%)</title><rect x="234.6" y="229" width="18.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="237.59" y="239.5" ></text>
</g>
<g >
<title>bool std::operator&lt; &lt;int, long&gt; (16,047,211 samples, 0.19%)</title><rect x="1052.1" y="469" width="2.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1055.13" y="479.5" ></text>
</g>
<g >
<title>operator delete (30,459,499 samples, 0.37%)</title><rect x="893.2" y="405" width="4.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="896.20" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (22,478,691 samples, 0.27%)</title><rect x="292.1" y="197" width="3.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="295.06" y="207.5" ></text>
</g>
<g >
<title>blk_mq_attempt_bio_merge (11,728,699 samples, 0.14%)</title><rect x="416.1" y="261" width="1.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="419.13" y="271.5" ></text>
</g>
<g >
<title>schedule (682,903,758 samples, 8.26%)</title><rect x="257.4" y="325" width="97.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="260.44" y="335.5" >schedule</text>
</g>
<g >
<title>tick_sched_handle (16,865,325 samples, 0.20%)</title><rect x="243.3" y="85" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="246.26" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (19,509,846 samples, 0.24%)</title><rect x="779.0" y="453" width="2.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="782.00" y="463.5" ></text>
</g>
<g >
<title>dequeue_task_fair (185,876,903 samples, 2.25%)</title><rect x="259.3" y="277" width="26.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="262.30" y="287.5" >d..</text>
</g>
<g >
<title>kiocb_invalidate_pages (15,751,677 samples, 0.19%)</title><rect x="635.1" y="357" width="2.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="638.11" y="367.5" ></text>
</g>
<g >
<title>ext4_ext_correct_indexes (17,403,735 samples, 0.21%)</title><rect x="477.3" y="293" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="480.35" y="303.5" ></text>
</g>
<g >
<title>prepare_task_switch (38,329,826 samples, 0.46%)</title><rect x="325.7" y="293" width="5.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="328.75" y="303.5" ></text>
</g>
<g >
<title>dequeue_task (185,876,903 samples, 2.25%)</title><rect x="259.3" y="293" width="26.5" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="262.30" y="303.5" >d..</text>
</g>
<g >
<title>__ext4_journal_stop (50,546,024 samples, 0.61%)</title><rect x="128.6" y="389" width="7.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="131.63" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_ptr (11,329,143 samples, 0.14%)</title><rect x="1054.4" y="453" width="1.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1057.42" y="463.5" ></text>
</g>
<g >
<title>blk_mq_request_issue_directly (501,618,574 samples, 6.06%)</title><rect x="185.9" y="277" width="71.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="188.88" y="287.5" >blk_mq_r..</text>
</g>
<g >
<title>scsi_target_queue_ready (17,278,742 samples, 0.21%)</title><rect x="252.9" y="229" width="2.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="255.88" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_membuf&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_ptr (14,677,811 samples, 0.18%)</title><rect x="929.0" y="421" width="2.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="931.96" y="431.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (21,414,735 samples, 0.26%)</title><rect x="483.7" y="229" width="3.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="486.71" y="239.5" ></text>
</g>
<g >
<title>__es_delayed_clu (31,748,687 samples, 0.38%)</title><rect x="471.1" y="277" width="4.5" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="474.09" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_key (93,032,883 samples, 1.12%)</title><rect x="1054.4" y="469" width="13.3" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1057.42" y="479.5" ></text>
</g>
<g >
<title>ext4_inode_csum_set (12,544,828 samples, 0.15%)</title><rect x="737.3" y="277" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="740.33" y="287.5" ></text>
</g>
<g >
<title>gup_pgd_range (98,620,209 samples, 1.19%)</title><rect x="379.8" y="245" width="14.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="382.76" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (11,907,551 samples, 0.14%)</title><rect x="232.9" y="165" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="235.89" y="175.5" ></text>
</g>
<g >
<title>sched_clock_noinstr (14,896,331 samples, 0.18%)</title><rect x="348.7" y="245" width="2.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="351.73" y="255.5" ></text>
</g>
<g >
<title>clear_bhb_loop (11,885,038 samples, 0.14%)</title><rect x="106.8" y="485" width="1.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="109.77" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (13,736,567 samples, 0.17%)</title><rect x="104.8" y="485" width="2.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="107.81" y="495.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::deallocate (21,326,282 samples, 0.26%)</title><rect x="897.5" y="405" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="900.54" y="415.5" ></text>
</g>
<g >
<title>std::less&lt;std::pair&lt;int, long&gt; &gt;::operator (69,767,233 samples, 0.84%)</title><rect x="1077.6" y="469" width="10.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1080.63" y="479.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_get_Node_allocator (14,198,250 samples, 0.17%)</title><rect x="887.5" y="421" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="890.49" y="431.5" ></text>
</g>
<g >
<title>malloc (12,525,058 samples, 0.15%)</title><rect x="1016.6" y="421" width="1.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1019.60" y="431.5" ></text>
</g>
<g >
<title>do_user_addr_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="501" width="1.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.23" y="511.5" ></text>
</g>
<g >
<title>generic_update_time (34,479,829 samples, 0.42%)</title><rect x="72.3" y="405" width="5.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="75.33" y="415.5" ></text>
</g>
<g >
<title>mempool_alloc (45,887,485 samples, 0.55%)</title><rect x="407.9" y="309" width="6.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="410.87" y="319.5" ></text>
</g>
<g >
<title>ext4_get_group_desc (47,085,162 samples, 0.57%)</title><rect x="717.6" y="261" width="6.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="720.62" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,865,325 samples, 0.20%)</title><rect x="243.3" y="149" width="2.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="246.26" y="159.5" ></text>
</g>
<g >
<title>security_file_permission (33,562,850 samples, 0.41%)</title><rect x="83.4" y="421" width="4.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="86.42" y="431.5" ></text>
</g>
<g >
<title>account_process_tick (13,736,567 samples, 0.17%)</title><rect x="104.8" y="373" width="2.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="107.81" y="383.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (17,984,017 samples, 0.22%)</title><rect x="449.1" y="325" width="2.6" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="452.11" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (22,478,691 samples, 0.27%)</title><rect x="292.1" y="277" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="295.06" y="287.5" ></text>
</g>
<g >
<title>dequeue_entity (171,346,811 samples, 2.07%)</title><rect x="259.3" y="261" width="24.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="262.30" y="271.5" >d..</text>
</g>
<g >
<title>tick_sched_handle (13,736,567 samples, 0.17%)</title><rect x="104.8" y="405" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="107.81" y="415.5" ></text>
</g>
<g >
<title>update_process_times (16,865,325 samples, 0.20%)</title><rect x="243.3" y="69" width="2.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="246.26" y="79.5" ></text>
</g>
<g >
<title>std::operator!= (24,031,040 samples, 0.29%)</title><rect x="1163.5" y="517" width="3.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1166.48" y="527.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (18,239,730 samples, 0.22%)</title><rect x="72.3" y="293" width="2.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="75.33" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,586,150 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,509,846 samples, 0.24%)</title><rect x="779.0" y="469" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="782.00" y="479.5" ></text>
</g>
<g >
<title>scsi_dispatch_cmd (303,612,469 samples, 3.67%)</title><rect x="191.3" y="229" width="43.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="194.27" y="239.5" >scsi..</text>
</g>
<g >
<title>blk_mq_rq_ctx_init.isra.0 (24,431,427 samples, 0.30%)</title><rect x="423.0" y="229" width="3.5" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="426.02" y="239.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (1,586,150 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;* std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_create_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::pair&lt;int, long&gt; const&amp;&gt;, std::tuple&lt;&gt; &gt; (125,238,176 samples, 1.51%)</title><rect x="1127.3" y="469" width="17.8" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1130.27" y="479.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (16,119,021 samples, 0.19%)</title><rect x="50.4" y="469" width="2.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="53.40" y="479.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,657,943 samples, 0.10%)</title><rect x="10.0" y="581" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (16,693,531 samples, 0.20%)</title><rect x="776.6" y="373" width="2.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="779.62" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_free (12,367,417 samples, 0.15%)</title><rect x="131.8" y="357" width="1.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="134.83" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (13,736,567 samples, 0.17%)</title><rect x="104.8" y="437" width="2.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="107.81" y="447.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_mbegin (18,515,582 samples, 0.22%)</title><rect x="917.4" y="453" width="2.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="920.44" y="463.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (15,844,879 samples, 0.19%)</title><rect x="815.5" y="469" width="2.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="818.45" y="479.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (132,062,146 samples, 1.60%)</title><rect x="675.1" y="309" width="18.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="678.11" y="319.5" ></text>
</g>
<g >
<title>__dquot_alloc_space (58,424,306 samples, 0.71%)</title><rect x="515.1" y="277" width="8.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="518.13" y="287.5" ></text>
</g>
<g >
<title>ext4_set_iomap (13,613,473 samples, 0.16%)</title><rect x="631.5" y="325" width="1.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="634.46" y="335.5" ></text>
</g>
<g >
<title>x64_sys_call (16,060,680 samples, 0.19%)</title><rect x="766.0" y="373" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="768.98" y="383.5" ></text>
</g>
<g >
<title>std::operator== (20,690,261 samples, 0.25%)</title><rect x="1115.3" y="485" width="3.0" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1118.34" y="495.5" ></text>
</g>
<g >
<title>__iomap_dio_rw (3,250,466,133 samples, 39.30%)</title><rect x="173.6" y="373" width="463.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="176.63" y="383.5" >__iomap_dio_rw</text>
</g>
<g >
<title>free_cache_block (1,237,596,049 samples, 14.96%)</title><rect x="792.0" y="517" width="176.6" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="795.00" y="527.5" >free_cache_block</text>
</g>
<g >
<title>update_process_times (22,478,691 samples, 0.27%)</title><rect x="292.1" y="165" width="3.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="295.06" y="175.5" ></text>
</g>
<g >
<title>virtscsi_add_cmd (137,390,777 samples, 1.66%)</title><rect x="215.0" y="197" width="19.6" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="217.99" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="533" width="1.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.23" y="543.5" ></text>
</g>
<g >
<title>std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::operator (49,184,750 samples, 0.59%)</title><rect x="1060.7" y="453" width="7.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1063.68" y="463.5" ></text>
</g>
<g >
<title>cpuset_cpu_is_isolated (21,414,735 samples, 0.26%)</title><rect x="483.7" y="165" width="3.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="486.71" y="175.5" ></text>
</g>
<g >
<title> (70,059,258 samples, 0.85%)</title><rect x="858.9" y="485" width="10.0" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="861.90" y="495.5" ></text>
</g>
<g >
<title>psi_group_change (122,758,302 samples, 1.48%)</title><rect x="331.2" y="277" width="17.5" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="334.22" y="287.5" ></text>
</g>
<g >
<title>pvclock_clocksource_read_nowd (14,896,331 samples, 0.18%)</title><rect x="348.7" y="213" width="2.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="351.73" y="223.5" ></text>
</g>
<g >
<title>ext4_get_group_no_and_offset (16,501,436 samples, 0.20%)</title><rect x="607.7" y="245" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="610.72" y="255.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (21,414,735 samples, 0.26%)</title><rect x="483.7" y="213" width="3.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="486.71" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (13,736,567 samples, 0.17%)</title><rect x="104.8" y="421" width="2.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="107.81" y="431.5" ></text>
</g>
<g >
<title>ext4_find_extent (88,419,549 samples, 1.07%)</title><rect x="495.3" y="293" width="12.6" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="498.31" y="303.5" ></text>
</g>
<g >
<title>jbd2_journal_stop (10,611,050 samples, 0.13%)</title><rect x="671.5" y="309" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="674.51" y="319.5" ></text>
</g>
<g >
<title>bool std::chrono::operator&lt; &lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40,475,200 samples, 0.49%)</title><rect x="809.7" y="469" width="5.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="812.68" y="479.5" ></text>
</g>
<g >
<title>__blk_rq_map_sg (21,064,172 samples, 0.25%)</title><rect x="245.7" y="165" width="3.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="248.67" y="175.5" ></text>
</g>
<g >
<title>lookup_bh_lru (41,646,850 samples, 0.50%)</title><rect x="711.7" y="229" width="5.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="714.68" y="239.5" ></text>
</g>
<g >
<title>sd_setup_read_write_cmnd (85,897,066 samples, 1.04%)</title><rect x="240.6" y="197" width="12.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="243.62" y="207.5" ></text>
</g>
<g >
<title>update_min_vruntime (14,750,950 samples, 0.18%)</title><rect x="281.6" y="245" width="2.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="284.65" y="255.5" ></text>
</g>
<g >
<title>bdev_getblk (15,699,450 samples, 0.19%)</title><rect x="724.3" y="277" width="2.3" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="727.34" y="287.5" ></text>
</g>
<g >
<title> (18,844,895 samples, 0.23%)</title><rect x="1169.6" y="517" width="2.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="1172.57" y="527.5" ></text>
</g>
<g >
<title>cpuacct_charge (15,224,072 samples, 0.18%)</title><rect x="261.7" y="245" width="2.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="264.73" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (7,071,793 samples, 0.09%)</title><rect x="10.2" y="517" width="1.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.23" y="527.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (20,719,472 samples, 0.25%)</title><rect x="318.6" y="229" width="2.9" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="321.57" y="239.5" ></text>
</g>
<g >
<title>CacheBlock::CacheBlock (12,857,562 samples, 0.16%)</title><rect x="1141.2" y="405" width="1.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1144.19" y="415.5" ></text>
</g>
<g >
<title>ext4_ext_search_right (28,240,939 samples, 0.34%)</title><rect x="491.3" y="293" width="4.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="494.28" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (43,705,876 samples, 0.53%)</title><rect x="285.8" y="277" width="6.3" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="288.82" y="287.5" ></text>
</g>
<g >
<title>__blk_mq_issue_directly (16,184,793 samples, 0.20%)</title><rect x="183.6" y="277" width="2.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="186.57" y="287.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (13,492,442 samples, 0.16%)</title><rect x="144.9" y="357" width="1.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="147.86" y="367.5" ></text>
</g>
<g >
<title>ext4_orphan_add (102,457,972 samples, 1.24%)</title><rect x="156.9" y="389" width="14.6" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="159.86" y="399.5" ></text>
</g>
<g >
<title>ext4_mb_initialize_context (12,710,675 samples, 0.15%)</title><rect x="555.9" y="277" width="1.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="558.92" y="287.5" ></text>
</g>
<g >
<title>ext4_get_inode_loc (43,223,327 samples, 0.52%)</title><rect x="536.7" y="213" width="6.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="539.71" y="223.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (16,977,704 samples, 0.21%)</title><rect x="259.3" y="245" width="2.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="262.30" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;int, long&gt;::pair&lt;int&amp;, long&amp;, true&gt; (18,663,740 samples, 0.23%)</title><rect x="1166.9" y="517" width="2.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="1169.91" y="527.5" ></text>
</g>
<g >
<title>do_anonymous_page (18,421,199 samples, 0.22%)</title><rect x="770.7" y="341" width="2.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="773.70" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (4,413,694,103 samples, 53.36%)</title><rect x="123.2" y="469" width="629.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="126.16" y="479.5" >x64_sys_call</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::lower_bound (61,056,750 samples, 0.74%)</title><rect x="946.6" y="469" width="8.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="949.63" y="479.5" ></text>
</g>
<g >
<title>virtqueue_notify (86,657,932 samples, 1.05%)</title><rect x="222.2" y="181" width="12.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="225.23" y="191.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (14,398,120 samples, 0.17%)</title><rect x="728.2" y="309" width="2.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="731.18" y="319.5" ></text>
</g>
<g >
<title>std::operator== (21,548,958 samples, 0.26%)</title><rect x="995.0" y="501" width="3.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="997.98" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_drop_node (131,121,013 samples, 1.59%)</title><rect x="883.6" y="437" width="18.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="886.63" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (23,100,925 samples, 0.28%)</title><rect x="773.3" y="293" width="3.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="776.32" y="303.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::operator[] (77,770,179 samples, 0.94%)</title><rect x="944.2" y="501" width="11.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="947.24" y="511.5" ></text>
</g>
<g >
<title>bdev_getblk (25,753,565 samples, 0.31%)</title><rect x="581.5" y="213" width="3.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="584.52" y="223.5" ></text>
</g>
<g >
<title>__ext4_journal_get_write_access (18,719,896 samples, 0.23%)</title><rect x="481.0" y="229" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="484.04" y="239.5" ></text>
</g>
<g >
<title>jbd2_write_access_granted (38,549,019 samples, 0.47%)</title><rect x="696.8" y="261" width="5.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="699.84" y="271.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (1,586,150 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__update_blocked_fair (65,060,045 samples, 0.79%)</title><rect x="306.9" y="229" width="9.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="309.91" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (18,743,986 samples, 0.23%)</title><rect x="676.8" y="293" width="2.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="679.79" y="303.5" ></text>
</g>
<g >
<title>iov_iter_extract_pages (142,064,359 samples, 1.72%)</title><rect x="373.6" y="309" width="20.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="376.57" y="319.5" ></text>
</g>
<g >
<title>[ld-linux-x86-64.so.2] (8,657,943 samples, 0.10%)</title><rect x="10.0" y="565" width="1.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_M_get_insert_hint_unique_pos (18,289,459 samples, 0.22%)</title><rect x="1122.3" y="501" width="2.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1125.34" y="511.5" ></text>
</g>
<g >
<title>__submit_bio (128,612,630 samples, 1.55%)</title><rect x="416.1" y="277" width="18.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="419.13" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,036,437 samples, 0.21%)</title><rect x="768.3" y="357" width="2.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="771.27" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (330,220,909 samples, 3.99%)</title><rect x="43.9" y="517" width="47.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="46.91" y="527.5" >entr..</text>
</g>
<g >
<title>int&amp; std::forward&lt;int&amp;&gt; (27,236,755 samples, 0.33%)</title><rect x="998.1" y="517" width="3.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1001.06" y="527.5" ></text>
</g>
<g >
<title>virtqueue_add_sgs (14,824,968 samples, 0.18%)</title><rect x="217.6" y="165" width="2.1" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="220.59" y="175.5" ></text>
</g>
<g >
<title>iov_iter_extract_pages (15,051,170 samples, 0.18%)</title><rect x="393.8" y="325" width="2.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="396.83" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::end (33,248,487 samples, 0.40%)</title><rect x="1100.4" y="485" width="4.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1103.38" y="495.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (44,306,287 samples, 0.54%)</title><rect x="163.0" y="373" width="6.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="165.98" y="383.5" ></text>
</g>
<g >
<title>do_user_addr_fault (58,558,561 samples, 0.71%)</title><rect x="768.3" y="405" width="8.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="771.27" y="415.5" ></text>
</g>
<g >
<title>__brelse (11,742,781 samples, 0.14%)</title><rect x="675.1" y="293" width="1.7" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="678.11" y="303.5" ></text>
</g>
<g >
<title>touch_atime (62,627,377 samples, 0.76%)</title><rect x="72.3" y="421" width="9.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="75.33" y="431.5" ></text>
</g>
<g >
<title>update_load_avg (16,693,531 samples, 0.20%)</title><rect x="776.6" y="277" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="779.62" y="287.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list.part.0 (517,803,367 samples, 6.26%)</title><rect x="183.6" y="309" width="73.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="186.57" y="319.5" >blk_mq_f..</text>
</g>
<g >
<title>iomap_dio_complete (683,367,744 samples, 8.26%)</title><rect x="650.1" y="373" width="97.5" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="653.10" y="383.5" >iomap_dio_c..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::begin (16,217,025 samples, 0.20%)</title><rect x="836.4" y="501" width="2.3" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="839.38" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle (22,478,691 samples, 0.27%)</title><rect x="292.1" y="181" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="295.06" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (21,326,282 samples, 0.26%)</title><rect x="897.5" y="373" width="3.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="900.54" y="383.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (50,410,308 samples, 0.61%)</title><rect x="113.8" y="437" width="7.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="116.75" y="447.5" ></text>
</g>
<g >
<title>__ext4_journal_start_sb (17,419,892 samples, 0.21%)</title><rect x="669.0" y="325" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="672.02" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (13,736,567 samples, 0.17%)</title><rect x="104.8" y="453" width="2.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="107.81" y="463.5" ></text>
</g>
<g >
<title>cfree (130,871,453 samples, 1.58%)</title><rect x="817.7" y="501" width="18.7" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="820.71" y="511.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (16,832,527 samples, 0.20%)</title><rect x="276.0" y="229" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="278.99" y="239.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (18,421,199 samples, 0.22%)</title><rect x="770.7" y="325" width="2.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="773.70" y="335.5" ></text>
</g>
<g >
<title>jbd2_journal_get_write_access (58,752,232 samples, 0.71%)</title><rect x="694.0" y="277" width="8.3" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="696.95" y="287.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_Rb_tree_iterator (22,867,735 samples, 0.28%)</title><rect x="931.1" y="453" width="3.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="934.05" y="463.5" ></text>
</g>
<g >
<title>std::map&lt;std::pair&lt;int, long&gt;, CacheBlock, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::find (653,998,560 samples, 7.91%)</title><rect x="1025.0" y="517" width="93.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1027.98" y="527.5" >std::map&lt;st..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (92,103,421 samples, 1.11%)</title><rect x="529.7" y="245" width="13.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="532.74" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (31,570,426 samples, 0.38%)</title><rect x="287.6" y="245" width="4.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="290.55" y="255.5" ></text>
</g>
<g >
<title>__ext4_get_inode_loc (43,223,327 samples, 0.52%)</title><rect x="536.7" y="197" width="6.2" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="539.71" y="207.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (62,297,733 samples, 0.75%)</title><rect x="730.2" y="309" width="8.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="733.24" y="319.5" ></text>
</g>
<g >
<title>perf_event_context_sched_out (38,329,826 samples, 0.46%)</title><rect x="325.7" y="261" width="5.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="328.75" y="271.5" ></text>
</g>
<g >
<title>__ext4_mark_inode_dirty (386,663,129 samples, 4.67%)</title><rect x="673.0" y="325" width="55.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="676.02" y="335.5" >__ext..</text>
</g>
<g >
<title>ext4_get_inode_loc (44,306,287 samples, 0.54%)</title><rect x="163.0" y="357" width="6.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="165.98" y="367.5" ></text>
</g>
<g >
<title>kvm_sched_clock_read (14,896,331 samples, 0.18%)</title><rect x="348.7" y="229" width="2.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="351.73" y="239.5" ></text>
</g>
<g >
<title>stop_this_handle (17,984,017 samples, 0.22%)</title><rect x="449.1" y="309" width="2.6" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="452.11" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (7,071,793 samples, 0.09%)</title><rect x="10.2" y="421" width="1.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.23" y="431.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (16,865,325 samples, 0.20%)</title><rect x="243.3" y="101" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="246.26" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (4,528,569,282 samples, 54.75%)</title><rect x="106.8" y="501" width="646.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="109.77" y="511.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>update_blocked_averages (29,579,326 samples, 0.36%)</title><rect x="321.5" y="261" width="4.2" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="324.53" y="271.5" ></text>
</g>
<g >
<title>ext4_jbd2_inode_add_write.part.0 (44,389,895 samples, 0.54%)</title><rect x="625.1" y="309" width="6.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="628.13" y="319.5" ></text>
</g>
<g >
<title>clock_gettime (63,975,855 samples, 0.77%)</title><rect x="1176.3" y="517" width="9.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1179.30" y="527.5" ></text>
</g>
<g >
<title>writebench (8,271,136,722 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >writebench</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (19,015,180 samples, 0.23%)</title><rect x="140.4" y="293" width="2.7" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="143.43" y="303.5" ></text>
</g>
<g >
<title>bool std::chrono::operator&gt;&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (93,939,674 samples, 1.14%)</title><rect x="804.3" y="501" width="13.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="807.31" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (17,036,437 samples, 0.21%)</title><rect x="768.3" y="389" width="2.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="771.27" y="399.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (76,740,021 samples, 0.93%)</title><rect x="1174.5" y="533" width="10.9" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="1177.47" y="543.5" ></text>
</g>
<g >
<title>__es_insert_extent (11,933,803 samples, 0.14%)</title><rect x="465.1" y="293" width="1.7" height="15.0" fill="rgb(254,225,54)" rx="2" ry="2" />
<text  x="468.08" y="303.5" ></text>
</g>
<g >
<title>__wake_up (18,239,730 samples, 0.22%)</title><rect x="72.3" y="309" width="2.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="75.33" y="319.5" ></text>
</g>
<g >
<title>mb_set_bits (18,335,091 samples, 0.22%)</title><rect x="589.8" y="245" width="2.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="592.84" y="255.5" ></text>
</g>
<g >
<title>dequeue_task (12,594,730 samples, 0.15%)</title><rect x="353.1" y="309" width="1.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="356.07" y="319.5" ></text>
</g>
<g >
<title>bool std::chrono::operator&gt;&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (9,997,757 samples, 0.12%)</title><rect x="781.8" y="517" width="1.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="784.79" y="527.5" ></text>
</g>
<g >
<title>virtio_check_driver_offered_feature (23,419,221 samples, 0.28%)</title><rect x="201.3" y="213" width="3.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="204.34" y="223.5" ></text>
</g>
<g >
<title>__pte_offset_map (21,173,946 samples, 0.26%)</title><rect x="390.8" y="213" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="393.81" y="223.5" ></text>
</g>
<g >
<title>update_process_times (17,036,437 samples, 0.21%)</title><rect x="768.3" y="277" width="2.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="771.27" y="287.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (38,329,826 samples, 0.46%)</title><rect x="325.7" y="277" width="5.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="328.75" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (17,036,437 samples, 0.21%)</title><rect x="768.3" y="293" width="2.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="771.27" y="303.5" ></text>
</g>
<g >
<title>blk_finish_plug (39,736,437 samples, 0.48%)</title><rect x="637.4" y="373" width="5.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="640.35" y="383.5" ></text>
</g>
<g >
<title>psi_task_switch (137,654,633 samples, 1.66%)</title><rect x="331.2" y="293" width="19.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="334.22" y="303.5" ></text>
</g>
<g >
<title>__ext4_journal_stop (29,315,203 samples, 0.35%)</title><rect x="525.6" y="245" width="4.1" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="528.55" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (110,127,361 samples, 1.33%)</title><rect x="28.2" y="533" width="15.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="31.20" y="543.5" ></text>
</g>
<g >
<title>main (8,262,064,710 samples, 99.89%)</title><rect x="11.3" y="565" width="1178.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="14.29" y="575.5" >main</text>
</g>
<g >
<title>hrtimer_interrupt (17,036,437 samples, 0.21%)</title><rect x="768.3" y="341" width="2.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="771.27" y="351.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::pair&lt;int, long&gt;, std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt;, std::_Select1st&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;, std::less&lt;std::pair&lt;int, long&gt; &gt;, std::allocator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt; &gt;::_S_key (18,005,114 samples, 0.22%)</title><rect x="1150.2" y="485" width="2.5" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1153.16" y="495.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (14,104,365 samples, 0.17%)</title><rect x="739.1" y="261" width="2.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="742.12" y="271.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (18,886,773 samples, 0.23%)</title><rect x="111.1" y="469" width="2.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="114.06" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;std::pair&lt;int, long&gt;, std::allocator&lt;std::pair&lt;int, long&gt; &gt; &gt;::_M_get_node (12,525,058 samples, 0.15%)</title><rect x="1016.6" y="469" width="1.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1019.60" y="479.5" ></text>
</g>
<g >
<title>ext4_reserve_inode_write (40,134,631 samples, 0.49%)</title><rect x="481.0" y="245" width="5.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="484.04" y="255.5" ></text>
</g>
<g >
<title>newidle_balance (148,521,006 samples, 1.80%)</title><rect x="300.3" y="261" width="21.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="303.34" y="271.5" ></text>
</g>
<g >
<title>std::_Rb_tree_node&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::_M_valptr (26,355,331 samples, 0.32%)</title><rect x="868.9" y="501" width="3.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="871.89" y="511.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::pair&lt;int, long&gt; const, CacheBlock&gt; &gt;::operator (70,059,258 samples, 0.85%)</title><rect x="858.9" y="501" width="10.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="861.90" y="511.5" ></text>
</g>
</g>
</svg>
